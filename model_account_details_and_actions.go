/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
)

// AccountDetailsAndActions # The LinkedAccount Object ### Description The `LinkedAccount` object is used to represent an end user's link with a specific integration.  ### Usage Example View a list of your organization's `LinkedAccount` objects.
type AccountDetailsAndActions struct {
	Id string `json:"id"`
	Category *string `json:"category,omitempty"`
	Status string `json:"status"`
	StatusDetail *string `json:"status_detail,omitempty"`
	EndUserOriginId *string `json:"end_user_origin_id,omitempty"`
	EndUserOrganizationName string `json:"end_user_organization_name"`
	EndUserEmailAddress string `json:"end_user_email_address"`
	Integration *AccountDetailsAndActionsIntegration `json:"integration,omitempty"`
}

// NewAccountDetailsAndActions instantiates a new AccountDetailsAndActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDetailsAndActions(id string, status string, endUserOrganizationName string, endUserEmailAddress string) *AccountDetailsAndActions {
	this := AccountDetailsAndActions{}
	this.Id = id
	this.Status = status
	this.EndUserOrganizationName = endUserOrganizationName
	this.EndUserEmailAddress = endUserEmailAddress
	return &this
}

// NewAccountDetailsAndActionsWithDefaults instantiates a new AccountDetailsAndActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDetailsAndActionsWithDefaults() *AccountDetailsAndActions {
	this := AccountDetailsAndActions{}
	return &this
}

// GetId returns the Id field value
func (o *AccountDetailsAndActions) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountDetailsAndActions) SetId(v string) {
	o.Id = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *AccountDetailsAndActions) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *AccountDetailsAndActions) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *AccountDetailsAndActions) SetCategory(v string) {
	o.Category = &v
}

// GetStatus returns the Status field value
func (o *AccountDetailsAndActions) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccountDetailsAndActions) SetStatus(v string) {
	o.Status = v
}

// GetStatusDetail returns the StatusDetail field value if set, zero value otherwise.
func (o *AccountDetailsAndActions) GetStatusDetail() string {
	if o == nil || o.StatusDetail == nil {
		var ret string
		return ret
	}
	return *o.StatusDetail
}

// GetStatusDetailOk returns a tuple with the StatusDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetStatusDetailOk() (*string, bool) {
	if o == nil || o.StatusDetail == nil {
		return nil, false
	}
	return o.StatusDetail, true
}

// HasStatusDetail returns a boolean if a field has been set.
func (o *AccountDetailsAndActions) HasStatusDetail() bool {
	if o != nil && o.StatusDetail != nil {
		return true
	}

	return false
}

// SetStatusDetail gets a reference to the given string and assigns it to the StatusDetail field.
func (o *AccountDetailsAndActions) SetStatusDetail(v string) {
	o.StatusDetail = &v
}

// GetEndUserOriginId returns the EndUserOriginId field value if set, zero value otherwise.
func (o *AccountDetailsAndActions) GetEndUserOriginId() string {
	if o == nil || o.EndUserOriginId == nil {
		var ret string
		return ret
	}
	return *o.EndUserOriginId
}

// GetEndUserOriginIdOk returns a tuple with the EndUserOriginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetEndUserOriginIdOk() (*string, bool) {
	if o == nil || o.EndUserOriginId == nil {
		return nil, false
	}
	return o.EndUserOriginId, true
}

// HasEndUserOriginId returns a boolean if a field has been set.
func (o *AccountDetailsAndActions) HasEndUserOriginId() bool {
	if o != nil && o.EndUserOriginId != nil {
		return true
	}

	return false
}

// SetEndUserOriginId gets a reference to the given string and assigns it to the EndUserOriginId field.
func (o *AccountDetailsAndActions) SetEndUserOriginId(v string) {
	o.EndUserOriginId = &v
}

// GetEndUserOrganizationName returns the EndUserOrganizationName field value
func (o *AccountDetailsAndActions) GetEndUserOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndUserOrganizationName
}

// GetEndUserOrganizationNameOk returns a tuple with the EndUserOrganizationName field value
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetEndUserOrganizationNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndUserOrganizationName, true
}

// SetEndUserOrganizationName sets field value
func (o *AccountDetailsAndActions) SetEndUserOrganizationName(v string) {
	o.EndUserOrganizationName = v
}

// GetEndUserEmailAddress returns the EndUserEmailAddress field value
func (o *AccountDetailsAndActions) GetEndUserEmailAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndUserEmailAddress
}

// GetEndUserEmailAddressOk returns a tuple with the EndUserEmailAddress field value
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetEndUserEmailAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndUserEmailAddress, true
}

// SetEndUserEmailAddress sets field value
func (o *AccountDetailsAndActions) SetEndUserEmailAddress(v string) {
	o.EndUserEmailAddress = v
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *AccountDetailsAndActions) GetIntegration() AccountDetailsAndActionsIntegration {
	if o == nil || o.Integration == nil {
		var ret AccountDetailsAndActionsIntegration
		return ret
	}
	return *o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDetailsAndActions) GetIntegrationOk() (*AccountDetailsAndActionsIntegration, bool) {
	if o == nil || o.Integration == nil {
		return nil, false
	}
	return o.Integration, true
}

// HasIntegration returns a boolean if a field has been set.
func (o *AccountDetailsAndActions) HasIntegration() bool {
	if o != nil && o.Integration != nil {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given AccountDetailsAndActionsIntegration and assigns it to the Integration field.
func (o *AccountDetailsAndActions) SetIntegration(v AccountDetailsAndActionsIntegration) {
	o.Integration = &v
}

func (o AccountDetailsAndActions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusDetail != nil {
		toSerialize["status_detail"] = o.StatusDetail
	}
	if o.EndUserOriginId != nil {
		toSerialize["end_user_origin_id"] = o.EndUserOriginId
	}
	if true {
		toSerialize["end_user_organization_name"] = o.EndUserOrganizationName
	}
	if true {
		toSerialize["end_user_email_address"] = o.EndUserEmailAddress
	}
	if o.Integration != nil {
		toSerialize["integration"] = o.Integration
	}
	return json.Marshal(toSerialize)
}

type NullableAccountDetailsAndActions struct {
	value *AccountDetailsAndActions
	isSet bool
}

func (v NullableAccountDetailsAndActions) Get() *AccountDetailsAndActions {
	return v.value
}

func (v *NullableAccountDetailsAndActions) Set(val *AccountDetailsAndActions) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDetailsAndActions) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDetailsAndActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDetailsAndActions(val *AccountDetailsAndActions) *NullableAccountDetailsAndActions {
	return &NullableAccountDetailsAndActions{value: val, isSet: true}
}

func (v NullableAccountDetailsAndActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDetailsAndActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


