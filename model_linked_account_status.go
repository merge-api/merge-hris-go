/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
)

// LinkedAccountStatus struct for LinkedAccountStatus
type LinkedAccountStatus struct {
	LinkedAccountStatus string `json:"linked_account_status"`
	CanMakeRequest bool `json:"can_make_request"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewLinkedAccountStatus instantiates a new LinkedAccountStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedAccountStatus(linkedAccountStatus string, canMakeRequest bool) *LinkedAccountStatus {
	this := LinkedAccountStatus{}
	this.LinkedAccountStatus = linkedAccountStatus
	this.CanMakeRequest = canMakeRequest
	return &this
}

// NewLinkedAccountStatusWithDefaults instantiates a new LinkedAccountStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedAccountStatusWithDefaults() *LinkedAccountStatus {
	this := LinkedAccountStatus{}
	return &this
}

// GetLinkedAccountStatus returns the LinkedAccountStatus field value
func (o *LinkedAccountStatus) GetLinkedAccountStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkedAccountStatus
}

// GetLinkedAccountStatusOk returns a tuple with the LinkedAccountStatus field value
// and a boolean to check if the value has been set.
func (o *LinkedAccountStatus) GetLinkedAccountStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkedAccountStatus, true
}

// SetLinkedAccountStatus sets field value
func (o *LinkedAccountStatus) SetLinkedAccountStatus(v string) {
	o.LinkedAccountStatus = v
}

// GetCanMakeRequest returns the CanMakeRequest field value
func (o *LinkedAccountStatus) GetCanMakeRequest() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CanMakeRequest
}

// GetCanMakeRequestOk returns a tuple with the CanMakeRequest field value
// and a boolean to check if the value has been set.
func (o *LinkedAccountStatus) GetCanMakeRequestOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CanMakeRequest, true
}

// SetCanMakeRequest sets field value
func (o *LinkedAccountStatus) SetCanMakeRequest(v bool) {
	o.CanMakeRequest = v
}

func (o LinkedAccountStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["linked_account_status"] = o.LinkedAccountStatus
	}
	if true {
		toSerialize["can_make_request"] = o.CanMakeRequest
	}
	return json.Marshal(toSerialize)
}

func (v *LinkedAccountStatus) UnmarshalJSON(src []byte) error {
    type LinkedAccountStatusUnmarshalTarget LinkedAccountStatus

	var intermediateResult LinkedAccountStatusUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = LinkedAccountStatus(intermediateResult)
	return nil
}
type NullableLinkedAccountStatus struct {
	value *LinkedAccountStatus
	isSet bool
}

func (v NullableLinkedAccountStatus) Get() *LinkedAccountStatus {
	return v.value
}

func (v *NullableLinkedAccountStatus) Set(val *LinkedAccountStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedAccountStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedAccountStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedAccountStatus(val *LinkedAccountStatus) *NullableLinkedAccountStatus {
	return &NullableLinkedAccountStatus{value: val, isSet: true}
}

func (v NullableLinkedAccountStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedAccountStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


