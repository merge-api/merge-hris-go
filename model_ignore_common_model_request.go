/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_hris_client

import (
	"encoding/json"
)

// IgnoreCommonModelRequest struct for IgnoreCommonModelRequest
type IgnoreCommonModelRequest struct {
	Reason ReasonEnum `json:"reason"`
	Message *string `json:"message,omitempty"`
}

// NewIgnoreCommonModelRequest instantiates a new IgnoreCommonModelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIgnoreCommonModelRequest(reason ReasonEnum) *IgnoreCommonModelRequest {
	this := IgnoreCommonModelRequest{}
	this.Reason = reason
	return &this
}

// NewIgnoreCommonModelRequestWithDefaults instantiates a new IgnoreCommonModelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIgnoreCommonModelRequestWithDefaults() *IgnoreCommonModelRequest {
	this := IgnoreCommonModelRequest{}
	return &this
}

// GetReason returns the Reason field value
func (o *IgnoreCommonModelRequest) GetReason() ReasonEnum {
	if o == nil {
		var ret ReasonEnum
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *IgnoreCommonModelRequest) GetReasonOk() (*ReasonEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *IgnoreCommonModelRequest) SetReason(v ReasonEnum) {
	o.Reason = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IgnoreCommonModelRequest) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IgnoreCommonModelRequest) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IgnoreCommonModelRequest) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IgnoreCommonModelRequest) SetMessage(v string) {
	o.Message = &v
}

func (o IgnoreCommonModelRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableIgnoreCommonModelRequest struct {
	value *IgnoreCommonModelRequest
	isSet bool
}

func (v NullableIgnoreCommonModelRequest) Get() *IgnoreCommonModelRequest {
	return v.value
}

func (v *NullableIgnoreCommonModelRequest) Set(val *IgnoreCommonModelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIgnoreCommonModelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIgnoreCommonModelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIgnoreCommonModelRequest(val *IgnoreCommonModelRequest) *NullableIgnoreCommonModelRequest {
	return &NullableIgnoreCommonModelRequest{value: val, isSet: true}
}

func (v NullableIgnoreCommonModelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIgnoreCommonModelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


